#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// #include "locale/keys_fr.h"
#include "locale/keymap_fr.h"

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 200    // 10

#define BASE 0
#define ALTGRD 1
#define LAFAYETTE 2
#define NAVI 3
#define MOUSENAVI 4
#define FONCTIONS 5
#define BT_OUT_SYS 6

// #define RGB_UG_CUSTOM &rgb_ug RGB_COLOR_HSB(247,49,30)
#define RGB_UG_CUSTOM &rgb_ug RGB_COLOR_HSB(258,100,66)

/ {

   // Activate BT_OUT_SYS layer by pressing ALTGRD and FONCTIONS
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adajust_layer {
            if-layers = <FONCTIONS ALTGRD>;
            then-layer = <BT_OUT_SYS>;
        };
    };

    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;     // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;     // 500
            delay-ms = <0>;                   // 10
        };

        tdLCTRL: tap_dance_left_ctrl {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            // bindings = <&mt LCTRL BACKSPACE>, <&to MOUSENAVI>;
            bindings = <&mt LCTRL ENTER>, <&to MOUSENAVI>;
        };

        tdRCTRL: tap_dance_right_ctrl {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RCTRL ENTER>, <&to MOUSENAVI>;
        };

        tdA: tap_dance_a_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_A>, <&kp FR_A_GRAVE>;
        };
        tdC: tap_dance_ctrl_c {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_C>, <&kp LC(FR_C)>;
        };
        tdD: tap_dance_dollar {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_D>, <&kp FR_DOLLAR>;
        };
        tdE: tap_dance_e_aigu_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_E>, <&kp FR_E_ACUTE>, <&kp FR_E_GRAVE>;
        };
        tdI: tap_dance_squote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_I>, <&kp FR_SQUOT>;
        };
        tdK: tap_dance_ctrl_slash {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_K>, <&kp LC(FR_SLASH)>;
        };
        tdO: tap_dance_dquote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_O>, <&kp FR_DQUOT>;
        };
        tdQ: tap_dance_slash {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_Q>, <&kp FR_SLASH>;
        };
        // tdS: tap_dance_slash {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp FR_S>, <&kp FR_SLASH>;
        // };
        tdU: tap_dance_u_grave {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_U>, <&kp FR_U_GRAVE>;
        };
        tdV: tap_dance_ctrl_v {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_V>, <&kp LC(FR_V)>;
        };
        tdX: tap_dance_ctrl_x {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_X>, <&kp LC(FR_X)>;
        };
        // tdZ: tap_dance_z_slash {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp FR_Z>, <&kp FR_SLASH>;
        // };

        tdCommaSemmi: tap_dance_comma_semi {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_COMMA>, <&kp FR_SEMICOLON>;
        };
        tdDotCol: tap_dance_dot_col {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_DOT>, <&kp FR_COLON>;
        };
        tdExclQuest: tap_dance_excl_quest {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_EXCL>, <&kp FR_QUESTION>;
        };

        comma_semi: my_comma_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            // bindings = <&kp FR_COMMA>, <&kp FR_SEMICOLON>;
            bindings = <&tdCommaSemmi>, <&kp FR_SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_col: my_dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            // bindings = <&kp FR_DOT>, <&kp FR_COLON>;
            bindings = <&tdDotCol>, <&kp FR_COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        excl_quest: my_excl_quest {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            // bindings = <&kp FR_EXCL>, <&kp FR_QUESTION>;
            bindings = <&tdExclQuest>, <&kp FR_QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        macros {

            a_circumflex: a_circumflex{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_CIRC &kp FR_A>;
            };
            e_circumflex: e_circumflex{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_CIRC &kp FR_E>;
            };
            i_circumflex: i_circumflex{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_CIRC &kp FR_I>;
            };
            o_circumflex: o_circumflex{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_CIRC &kp FR_O>;
            };
            u_circumflex: u_circumflex{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_CIRC &kp FR_U>;
            };

            a_diaeresis: a_diaeresis{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_UMLAUT &kp FR_A>;
            };
            e_diaeresis: e_diaeresis{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_UMLAUT &kp FR_E>;
            };
            i_diaeresis: i_diaeresis{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_UMLAUT &kp FR_I>;
            };
            o_diaeresis: o_diaeresis{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_UMLAUT &kp FR_O>;
            };
            u_diaeresis: u_diaeresis{
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings = <&kp FR_UMLAUT &kp FR_U>;
            };

            a_e: a_e {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LCTRL &kp LSHIFT>
                    , <&macro_tap     &kp U>
                    , <&macro_release &kp LCTRL &kp LSHIFT>
                    // , <&macro_tap     &kp N0 &kp N0 &kp E &kp N6>
                    , <&macro_tap     &kp FR_0 &kp FR_0 &kp E &kp FR_6 &kp ENTER>
                    ;
            };

            o_e: o_e {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <30>;
                tap-ms = <40>;
                bindings
                    = <&macro_press   &kp LCTRL &kp LSHIFT>
                    , <&macro_tap     &kp U>
                    , <&macro_release &kp LCTRL &kp LSHIFT>
                    // , <&macro_tap     &kp N0 &kp N1 &kp N5 &kp N3>
                    , <&macro_tap     &kp FR_0 &kp FR_1 &kp FR_5 &kp FR_3 &kp ENTER>
                    ;
            };

        };

    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |      ESC       |        1       |        2       |        3       |        4       |        5       |   UP_ARROW     |        6       |        7       |        8       |        9       |        0       |      DEL       |
// |            |      TAB       |       tdA      |        Z       |       tdE      |        R       |        T       |   DOWN_ARROW   |        Y       |       tdU      |       tdI      |       tdO      |        P       |      BKSPC     |
// |            |     CAPS       |       tdQ      |        S       |       tdD      |        F       |  &mt LSHIFT G  |   LEFT_ARROW   |  &mt RSHIFT H  |        J       |       tdK      |        L       |        M       |      ENTER     |
// |            |     LSHFT      |        W       |       tdX      |       tdC      |       tdV      |        B       |   RIGHT_ARROW  |        N       |      ,  ;      |       . :      |       ! ?      | &sl LAFAYETTE  |      SHIFT     |
// | C_MUTE     |                | &mo FONCTIONS  |    LEFT_GUI    | LALT BACKSPACE | &lt NAVI SPACE |     LCTRL      |      ENTER     |     RCTRL      | &lt NAVI SPACE | &lt ALTGRD DEL |     K_CMENU    | &mo FONCTIONS  |                |

            bindings = <
                 &kp ESC          &kp FR_1         &kp FR_2         &kp FR_3         &kp FR_4         &kp FR_5         &kp UP_ARROW     &kp FR_6         &kp FR_7         &kp FR_8         &kp FR_9         &kp FR_0         &kp DELETE
                 &kp TAB          &tdA             &kp FR_Z         &tdE             &kp FR_R         &kp FR_T         &kp DOWN_ARROW   &kp FR_Y         &tdU             &tdI             &tdO             &kp FR_P         &kp BACKSPACE
                 &kp CAPS         &tdQ             &kp FR_S         &tdD             &kp FR_F         &mt LSHIFT FR_G  &kp LEFT_ARROW   &mt RSHIFT FR_H  &kp FR_J         &tdK             &kp FR_L         &kp FR_M         &kp ENTER
                 &kp LSHFT        &kp FR_W         &tdX             &tdC             &tdV             &kp FR_B         &kp RIGHT_ARROW  &kp FR_N         &comma_semi      &dot_col         &excl_quest      &sl LAFAYETTE    &kp RSHFT
&kp C_MUTE                        &mo FONCTIONS    &kp LEFT_GUI   &mt LALT BACKSPACE &lt NAVI SPACE   &tdLCTRL         &kp ENTER        &tdRCTRL         &lt NAVI SPACE  &lt ALTGRD DELETE &kp K_CMENU      &mo FONCTIONS

            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        AltGround {
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |                |       €        |        ~       |        #       |        {       |        [       |   UP_ARROW     |        |       |        `       |       \        |        ^       |        @       |                |
// |            |                |       @        |        <       |        >       |        $       |        %       |   DOWN_ARROW   |        +       |        `       |       '        |        "       |        *       |                |
// |            |                |       {        |        (       |        )       |        }       |        =       |   LEFT_ARROW   |        -       |        _       |       \        |        |       |        /       |                |
// |            |                |       ~        |        [       |        ]       |        ^       |        #       |   RIGHT_ARROW  |        °       |        ;       |       :        |        &       |        €       |                |
// | C_MUTE     |                |                |                |                |                |                |      ENTER     |                |                |                |                |                |                |

            bindings = <
                 &trans            &kp FR_EURO     &kp FR_TILDE     &kp FR_HASH      &kp FR_LCBR      &kp FR_LBKT      &kp UP_ARROW     &kp FR_PIPE      &kp FR_GRAVE     &kp FR_BACKSLASH &kp FR_CIRC      &kp FR_AT        &trans
                 &trans            &kp FR_AT       &kp FR_LT        &kp FR_GT        &kp FR_DOLLAR    &kp FR_PERCENT   &kp DOWN_ARROW   &kp FR_PLUS      &kp FR_GRAVE     &kp FR_SQUOT     &kp FR_DQUOT     &kp FR_ASTERISK  &trans
                 &trans            &kp FR_LCBR     &kp FR_LPAR      &kp FR_RPAR      &kp FR_RCBR      &kp FR_EQUAL     &kp LEFT_ARROW   &kp FR_MINUS     &kp FR_UNDER     &kp FR_BACKSLASH &kp FR_PIPE      &kp FR_SLASH     &trans
                 &trans            &kp FR_TILDE    &kp FR_LBKT      &kp FR_RBKT      &kp FR_CIRC      &kp FR_HASH      &kp RIGHT_ARROW  &kp FR_DEGRE     &kp FR_SEMICOLON &kp FR_COLON     &kp FR_AMPERSAND &kp FR_EURO       &trans
&kp C_MUTE                         &trans          &trans           &trans           &trans           &trans           &kp ENTER        &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "AltGr";
        };

        Lafayette {
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |                |       &        |       é        |       "        |       '        |        (       |   UP_ARROW     |       -        |       è        |       _        |        ç       |        à       |                |
// |            |                |       à        |       é        |       è        |       €        |        ¨       |   DOWN_ARROW   |       ^        |       ù        |       _        |        "       |        £       |                |
// |            |                |       â        |       $        |       ê        |       &        |        (       |   LEFT_ARROW   |       )        |       û        |       î        |        ô       |        µ       |                |
// |            |                |       ä        |       æ        |       ç        |       ë        |        #       |   RIGHT_ARROW  |       •        |       ü        |       ï        |        ö       |        œ       |                |
// | C_MUTE     |                |                |                |                |                |                |      ENTER     |                |                |                |                |                |                |

            bindings = <
                 &trans           &kp FR_AMPERSAND &kp FR_E_ACUTE   &kp FR_DQUOT     &kp FR_SQUOT     &kp FR_LPAR      &kp UP_ARROW     &kp FR_MINUS     &kp FR_E_GRAVE   &kp FR_UNDER     &kp FR_C_CEDILLA &kp FR_A_GRAVE    &trans
                 &trans           &kp FR_A_GRAVE   &kp FR_E_ACUTE   &kp FR_E_GRAVE   &kp FR_EURO      &kp FR_UMLAUT    &kp DOWN_ARROW   &kp FR_CIRC      &kp FR_U_GRAVE   &kp FR_UNDER     &kp FR_DQUOT     &kp FR_POUND_SIGN &trans
                 &trans           &a_circumflex    &kp FR_DOLLAR    &e_circumflex    &kp FR_AMPERSAND &kp FR_LPAR      &kp LEFT_ARROW   &kp FR_RPAR      &u_circumflex    &i_circumflex    &o_circumflex    &kp FR_MICRO      &trans
                 &trans           &a_diaeresis     &a_e             &kp FR_C_CEDILLA &e_diaeresis     &kp FR_HASH      &kp RIGHT_ARROW  &kp FR_DOT       &u_diaeresis     &i_diaeresis     &o_diaeresis     &o_e              &trans
&kp C_MUTE                        &trans           &trans           &trans           &trans           &trans           &kp ENTER        &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Lafayette";
        };

        Navigation {
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |                |                |                |                |                |                |   MOVE_UP      |                |                |                |                |                |                |
// |            |                |     TAB        |      HOME      |    UP_ARROW    |      END       |    LC(HOME)    |   MOVE_DOWN    |       +        |       7        |       8        |       9        |        *       |                |
// |            |                |     CAPS       |   LEFT_ARROW   |   DOWN_ARROW   |  RIGHT_ARROW   |    LC(END)     |   MOVE_RIGHT   |       -        |       4        |       5        |       6        |        /       |                |
// |            |                |                |      LCLK      |     MOVE_UP    |      RCLK      |                |   MOVE_LEFT    |       0        |       1        |       2        |       3        |        .       |                |
// | C_MUTE     |                |                |   MOVE_LEFT    |    MOVE_DOWN   |   MOVE_RIGHT             |  LCTRL |   LCLK  |  RCTRL |            |                |                |                |                |

            bindings = <
                 &trans           &none            &none            &none            &none            &none            &mmv MOVE_UP     &none            &none            &none            &none            &none            &trans
                 &trans           &kp TAB          &kp HOME         &kp UP_ARROW     &kp END          &kp PAGE_UP      &mmv MOVE_DOWN   &kp FR_PLUS      &kp FR_7         &kp FR_8         &kp FR_9         &kp FR_ASTERISK  &trans
                 &trans           &kp CAPS         &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW  &kp PAGE_DOWN    &mmv MOVE_LEFT   &kp FR_MINUS     &kp FR_4         &kp FR_5         &kp FR_6         &kp FR_SLASH     &trans
                 &trans           &none            &mkp LCLK        &mmv MOVE_UP     &mkp RCLK        &none            &mmv MOVE_RIGHT  &kp FR_0         &kp FR_1         &kp FR_2         &kp FR_3         &kp FR_DOT       &trans
&kp C_MUTE                                         &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &trans      &kp LCTRL &mkp LCLK &kp RCTRL  &trans  &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Nav";
        };

        MouseNavi {
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |                |                |                |                |                |                |   MOVE_UP      |                |                |                |                |                |                |
// |            |                |     TAB        |      HOME      |    UP_ARROW    |      END       |    LC(HOME)    |   MOVE_DOWN    |   SCRL_LEFT    |      LCLK      |    MOVE_UP     |     RCLK       |     SCRL_UP    |                |
// |            |                |     CAPS       |   LEFT_ARROW   |   DOWN_ARROW   |  RIGHT_ARROW   |    LC(END)     |   MOVE_RIGHT   |   SCRL_RIGHT   |   MOVE_LEFT    |   MOVE_DOWN    |   MOVE_RIGHT   |    SCRL_DOWN   |                |
// |            |                |                |                |                |                |                |   MOVE_LEFT    |                |       MB4      |      RCLK      |      MB5       |                |                |
// | C_MUTE     |                |                |                |                |                |        |  &to base |   LCLK  |  &to base |       |                |                |                |                |                |

            bindings = <
                 &to BASE         &none            &none            &none            &none            &none            &mmv MOVE_UP     &none            &none            &none            &none            &none            &trans
                 &trans           &kp TAB          &kp HOME         &kp UP_ARROW     &kp END          &kp PAGE_UP      &mmv MOVE_DOWN   &msc SCRL_LEFT   &mkp LCLK        &mmv MOVE_UP     &mkp RCLK        &msc SCRL_UP     &trans
                 &trans           &kp CAPS         &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW  &kp PAGE_DOWN    &mmv MOVE_LEFT   &msc SCRL_RIGHT  &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &msc SCRL_DOWN   &trans
                 &trans           &none            &none            &to BASE         &none            &none            &mmv MOVE_RIGHT  &none            &mkp MB4         &mkp MCLK        &mkp MB5         &none            &trans
&kp C_MUTE                        &none            &none            &none            &none            &to BASE         &mkp LCLK        &to BASE         &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Mouse N";
        };


        Fonctions {
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |       ²        |       F1       |       F2       |       F3       |       F4       |       F5       |   SCRL_UP      |       F6       |       F7       |       F8       |       F9       |       F10      |     INSERT     |
// |            |                |       F11      |       F12      |                |                |    LC(HOME)    |   SCRL_DOWN    |    C_PREV      |  C_PLAY_PAUSE  |     C_NEXT     |     C_RECORD   |   PRINTSCREEN  |     INSERT     |
// |            |                |     RGB_ON     |                |                |                |    LC(END)     |   SCRL_LEFT    |    RGB_SPI     |    RGB_EFF     |     RGB_HUI    |     RGB_SAI    |     RGB_BRI    |                |
// |            |                |     RGB_OFF    |     RGB_TOG    |                | RGB_UG_CUSTOM  |    &to BASE    |   SCRL_RIGHT   |    RGB_SPD     |    RGB_EFR     |     RGB_HUD    |     RGB_SAD    |     RGB_BRD    |                |
// | C_MUTE     |                |                |                |                |                |                |   LCLK         |                |                |                |                |                |                |

            bindings = <
                 &kp FR_SQUARE    &kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &msc SCRL_UP     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &kp INSERT
                 &trans           &kp F11          &kp F12          &none            &none            &kp LC(HOME)     &msc SCRL_DOWN   &kp C_PREV       &kp C_PLAY_PAUSE &kp C_NEXT       &kp C_RECORD     &kp PRINTSCREEN  &kp INSERT
                 &trans           &rgb_ug RGB_ON   &none            &none            &none            &kp LC(END)      &msc SCRL_LEFT   &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans
                 &trans           &rgb_ug RGB_OFF  &rgb_ug RGB_TOG  &none            RGB_UG_CUSTOM    &to BASE         &msc SCRL_RIGHT  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &trans
&none                             &trans           &trans           &trans           &trans           &trans           &mkp LCLK        &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
            display-name = "Fn";
        };

        // TODO: à compléter / le F n'est là que pour tester
        BtOutSys {
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |            |                |  BT_SEL 0      |   BT_SEL 1     |   BT_SEL 2     |   BT_SEL 3     |   BT_SEL 4     |   MOVE_UP      |                |                |                |                |                |                |
// |            |                |  BT_CLR        |   BT_CLR_ALL   |                |                |                |   MOVE_DOWN    |                |                |                |                |                |                |
// |            |                |  OUT_USB       |   OUT_BLE      |   &to BASE     |        F       |                |   MOVE_RIGHT   |                |                |                |                |                |                |
// |            |                |                |                |                |                |                |   MOVE_LEFT    |                |                |   sys_reset    |    soft_off    |   bootloader   |                |
// | C_MUTE     |                |                |                |                |                |                |   LCLK         |                |                |                |                |                |                |

            bindings = <
                 &none            &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &mmv MOVE_UP     &none            &none            &none            &none            &none            &none
                 &none            &bt BT_CLR       &bt BT_CLR_ALL   &none            &none            &none            &mmv MOVE_DOWN   &none            &none            &none            &none            &none            &none
                 &none            &out OUT_USB     &out OUT_BLE     &to BASE         &kp FR_F         &none            &mmv MOVE_LEFT   &none            &none            &none            &none            &none            &none
                 &none            &sys_reset       &soft_off        &bootloader      &none            &none            &mmv MOVE_RIGHT  &none            &none            &sys_reset       &soft_off        &bootloader      &none
&trans                            &trans           &trans           &trans           &trans           &trans           &mkp LCLK        &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "BtOutSys";
        };
    };
};
